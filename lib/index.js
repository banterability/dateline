// Generated by CoffeeScript 1.9.2
(function() {
  var Dateline, dayNames, formatHours, formatMinutes, getDayOfWeek, monthNames, showMinutes, showYear, topOfHour, useDayName, withinSevenDays;

  Dateline = function(dateObj) {
    if (dateObj == null) {
      dateObj = new Date();
    }
    dateObj.getAPTime = function(options) {
      var hour, hours, minute, minutes, timeOfDay;
      if (options == null) {
        options = {};
      }
      hours = dateObj.getHours();
      minutes = dateObj.getMinutes();
      if (hours === 0 && minutes === 0) {
        return 'midnight';
      }
      if (hours === 12 && minutes === 0) {
        return 'noon';
      }
      timeOfDay = hours < 12 ? 'a.m.' : 'p.m.';
      hour = formatHours(hours);
      if (showMinutes(minutes, options)) {
        return hour + " " + timeOfDay;
      }
      minute = formatMinutes(minutes);
      return hour + ":" + minute + " " + timeOfDay;
    };
    dateObj.getAPDate = function(options) {
      var date, month, monthName, year;
      if (options == null) {
        options = {};
      }
      month = dateObj.getMonth();
      date = dateObj.getDate();
      year = dateObj.getFullYear();
      monthName = monthNames[month];
      if (useDayName(dateObj, options)) {
        return getDayOfWeek(dateObj);
      } else if (showYear(year, options)) {
        return monthName + " " + date;
      } else {
        return monthName + " " + date + ", " + year;
      }
    };
    return dateObj;
  };

  if (typeof module !== "undefined" && module !== null ? module.exports : void 0) {
    module.exports = Dateline;
  } else {
    this.Dateline = Dateline;
  }

  formatHours = function(hours) {
    if (hours === 0) {
      return 12;
    }
    if (hours > 12) {
      return hours - 12;
    }
    return hours;
  };

  topOfHour = function(minutes) {
    return minutes === 0;
  };

  formatMinutes = function(minutes) {
    if (minutes < 10) {
      return "0" + minutes;
    }
    return minutes;
  };

  showMinutes = function(minutes, options) {
    return topOfHour(minutes) && (options.includeMinutes == null);
  };

  monthNames = ['Jan.', 'Feb.', 'March', 'April', 'May', 'June', 'July', 'Aug.', 'Sept.', 'Oct.', 'Nov.', 'Dec.'];

  dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];

  showYear = function(year, options) {
    return (year === new Date().getFullYear()) && (options.includeYear == null);
  };

  getDayOfWeek = function(dateObj) {
    return dayNames[dateObj.getDay()];
  };

  useDayName = function(dateObj, options) {
    return (options.useDayNameForLastWeek != null) && withinSevenDays(new Date(), dateObj);
  };

  withinSevenDays = function(date1, date2) {
    var oneDayInMs, ref;
    oneDayInMs = 1000 * 60 * 60 * 24;
    return (-7 < (ref = (date2 - date1) / oneDayInMs) && ref < 0);
  };

}).call(this);
